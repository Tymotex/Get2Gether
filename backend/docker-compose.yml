version: '3.8'
services:
  # Container for the PostgreSQL database server
  db: # This name becomes the 'network alias' which is treated as the hostname in the database connection URI that the express server uses to establish a connection
    image: postgres
    environment:
      POSTGRES_USER: get2gether # Creates a user with superuser privileges
      POSTGRES_PASSWORD: get2gether # The created user's password
      POSTGRES_DB: get2gether # Name for the default database created when the container starts up
    volumes:
      - ./volumes/pgdata:/var/lib/postgresql/data # Bind mounts the host's directory `pgdata` to `/var/lib/postgressql/data`, which is the default path where the database is stored by PostgreSQL on Linux. If `pgdata` doesn't exist, it'll be created
    ports:
      - '5432:5432'
  # Container for the express API server
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - db # Start up the database server first. It's possible that the database server isn't up by the time the web server attempts to establish a connection, so you need to setup 'retry logic' in the Express server
    ports:
      - '4000:4000'
